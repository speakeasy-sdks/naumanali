// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UnauthorizedProblemDetailProblemDetailStatus - The HTTP status code generated by the origin server for this occurrence of the problem.
type UnauthorizedProblemDetailProblemDetailStatus int64

const (
	UnauthorizedProblemDetailProblemDetailStatusFourHundred              UnauthorizedProblemDetailProblemDetailStatus = 400
	UnauthorizedProblemDetailProblemDetailStatusFourHundredAndOne        UnauthorizedProblemDetailProblemDetailStatus = 401
	UnauthorizedProblemDetailProblemDetailStatusFourHundredAndTwo        UnauthorizedProblemDetailProblemDetailStatus = 402
	UnauthorizedProblemDetailProblemDetailStatusFourHundredAndThree      UnauthorizedProblemDetailProblemDetailStatus = 403
	UnauthorizedProblemDetailProblemDetailStatusFourHundredAndFour       UnauthorizedProblemDetailProblemDetailStatus = 404
	UnauthorizedProblemDetailProblemDetailStatusFourHundredAndNine       UnauthorizedProblemDetailProblemDetailStatus = 409
	UnauthorizedProblemDetailProblemDetailStatusFourHundredAndTwentyNine UnauthorizedProblemDetailProblemDetailStatus = 429
	UnauthorizedProblemDetailProblemDetailStatusFiveHundred              UnauthorizedProblemDetailProblemDetailStatus = 500
)

func (e UnauthorizedProblemDetailProblemDetailStatus) ToPointer() *UnauthorizedProblemDetailProblemDetailStatus {
	return &e
}

func (e *UnauthorizedProblemDetailProblemDetailStatus) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		fallthrough
	case 401:
		fallthrough
	case 402:
		fallthrough
	case 403:
		fallthrough
	case 404:
		fallthrough
	case 409:
		fallthrough
	case 429:
		fallthrough
	case 500:
		*e = UnauthorizedProblemDetailProblemDetailStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UnauthorizedProblemDetailProblemDetailStatus: %v", v)
	}
}

// UnauthorizedProblemDetail - Represents when the client must authenticate itself to get the requested response.
type UnauthorizedProblemDetail struct {
	// A human-readable explanation specific to this occurrence of the problem.
	Detail *string `json:"detail,omitempty"`
	// A URI reference that identifies the specific occurrence of the problem.
	Instance *string                                      `json:"instance,omitempty"`
	Status   UnauthorizedProblemDetailProblemDetailStatus `json:"status"`
	// A short, human-readable summary of the problem type.
	Title string `json:"title"`
	// A URI reference that identifies the problem type.
	Type string `json:"type"`
}

func (o *UnauthorizedProblemDetail) GetDetail() *string {
	if o == nil {
		return nil
	}
	return o.Detail
}

func (o *UnauthorizedProblemDetail) GetInstance() *string {
	if o == nil {
		return nil
	}
	return o.Instance
}

func (o *UnauthorizedProblemDetail) GetStatus() UnauthorizedProblemDetailProblemDetailStatus {
	if o == nil {
		return UnauthorizedProblemDetailProblemDetailStatus(0)
	}
	return o.Status
}

func (o *UnauthorizedProblemDetail) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *UnauthorizedProblemDetail) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}
